/**
 * @author Joe Kuan (improved & ported from ExtJs 3 highchart adapter)
 * @email kuan.joe@gmail.com
 * @version 1.0
 * @date 8 May 2012
 *
 * You are not permitted to remove the author section from this file.
 */

if(!Array.prototype.indexOf)Array.prototype.indexOf=function(a,c){var b=this.length,d=Number(c)||0,d=d<0?Math.ceil(d):Math.floor(d);for(d<0&&(d+=b);d<b;d++)if(d in this&&this[d]===a)return d;return-1};
Ext.define("Chart.ux.HighChart",{extend:"Ext.Component",alias:["widget.highchart"],defaultSerieType:null,resizable:!0,updateDelay:0,loadMask:!1,config:{title:"",subTitle:""},initComponent:function(){if(this.store)this.store=Ext.data.StoreManager.lookup(this.store);this.callParent(arguments)},addSeries:function(a,c){for(var c=c===null||c===!0?!0:!1,b=[],d=[],f,e=0;e<a.length;e++){var g=a[e];g.serieCls?f=g:(f=g.type!=null||this.defaultSerieType!=null?Chart.ux.HighChart.Series.get(g.type!=null?g.type:
this.defaultSerieType):Chart.ux.HighChart.Serie,f=Ext.create(f,g));d.push(f.config);b.push(f)}if(this.chart){c?(this.chartConfig.series=this.chartConfig.series?this.chartConfig.series.concat(d):d,this.series=this.series?this.series.concat(b):b):(this.removeAllSeries(),this.series=b,this.chartConfig.series=d);for(e=0;e<d.length;e++)this.chart.addSeries(d[e],!0)}else c?(this.chartConfig.series=this.chartConfig.series?this.chartConfig.series.concat(d):d,this.series=this.series?this.series.concat(b):
b):(this.chartConfig.series=d,this.series=b)},removeSerie:function(a,c){c=c||!0;this.chart&&(this.chart.series[a].remove(c),this.chartConfig.series.splice(a,1));this.series.splice(a,1)},removeAllSeries:function(){for(var a=this.series.length,c=0;c<a;c++)this.removeSerie(0)},setTitle:function(a){this.chartConfig.title?this.chartConfig.title.text=a:this.chartConfig.title={text:a};this.chart&&this.chart.container&&this.draw()},setSubTitle:function(a){this.chartConfig.subtitle?this.chartConfig.subtitle.text=
a:this.chartConfig.subtitle={text:a};this.chart&&this.chart.container&&this.draw()},initEvents:function(){if(this.loadMask)this.loadMask=new Ext.LoadMask(this.el,Ext.apply({store:this.store},this.loadMask))},afterRender:function(){this.store&&this.bindStore(this.store,!0);Chart.ux.HighChart.superclass.afterRender.call(this);this.bindComponent(!0);Ext.applyIf(this.chartConfig.chart,{renderTo:this.el.dom});Ext.applyIf(this.chartConfig,{xAxis:[{}]});this.xField&&this.store&&this.updatexAxisData();this.series?
this.addSeries(this.series,!1):this.series=[];this.initEvents();this.update(500)},onMove:function(){},draw:function(){if(this.chart&&this.rendered){if(this.resizable){for(var a=0;a<this.series.length;a++)this.series[a].visible=this.chart.series[a].visible;this.chart.destroy();delete this.chart;this.chart=new Highcharts.Chart(this.chartConfig)}}else if(this.rendered)this.chart=new Highcharts.Chart(this.chartConfig);for(a=0;a<this.series.length;a++)this.series[a].visible||this.chart.series[a].hide();
this.refresh()},onContainerResize:function(){this.draw()},updatexAxisData:function(){var a=[],c=this.store.data.items;if(this.xField&&this.store){for(var b=0;b<c.length;b++)a.push(c[b].data[this.xField]);this.chart?this.chart.xAxis[0].setCategories(a,!0):this.chartConfig.xAxis[0].categories=a}},bindComponent:function(a){var c=function(a){return a.ownerCt?c(a.ownerCt):a},b=c(this);if(a){if(b.on("move",this.onMove,this),b.on("resize",this.onResize,this),this.ownerCt)this.ownerCt.on("render",this.update,
this)}else this.ownerCt&&this.ownerCt.un("render",this.update,this),b.un("move",this.onMove,this)},bindStore:function(a,c){!c&&this.store&&(a!==this.store&&this.store.autoDestroy?this.store.destroy():(this.store.un("datachanged",this.onDataChange,this),this.store.un("load",this.onLoad,this),this.store.un("add",this.onAdd,this),this.store.un("remove",this.onRemove,this),this.store.un("update",this.onUpdate,this),this.store.un("clear",this.onClear,this)));a&&(a=Ext.StoreMgr.lookup(a),a.on({scope:this,
load:this.onLoad,datachanged:this.onDataChange,add:this.onAdd,remove:this.onRemove,update:this.onUpdate,clear:this.onClear}));(this.store=a)&&!c&&this.refresh()},refresh:function(){if(this.store&&this.chart){var a=[],c=this.series.length,b;for(b=0;b<c;b++)a.push([]);for(var d=this.store.data.items,f=[],e=0;e<d.length;e++){var g=d[e];this.xField&&f.push(g.data[this.xField]);for(b=0;b<c;b++){var h=this.series[b];h.type=="pie"&&h.useTotals&&(e==0&&h.clear(),h.getData(g,e));h.type=="pie"&&h.totalDataField?
h.getData(g,a[b]):h.data&&h.data[e]?a[b].push(h.data[e]):(h=h.getData(g,e),a[b].push(h))}}for(b=0;b<c;b++)this.series[b].useTotals?this.chart.series[b].setData(this.series[b].getTotals()):a[b].length>0&&this.chart.series[b].setData(a[b],b==c-1);this.xField&&this.updatexAxisData()}},refreshRow:function(a){var c=this.store.indexOf(a);if(this.chart){for(var b=0;b<this.chart.series.length;b++){var d=this.chart.series[b],f=this.series[b].getData(a,c);this.series[b].type=="pie"&&this.series[b].useTotals?
(this.series[b].update(a),this.chart.series[b].setData(this.series[b].getTotals())):d.data[c].update(f)}this.xField&&this.updatexAxisData()}},update:function(a){a=a||this.updateDelay;if(!this.updateTask)this.updateTask=new Ext.util.DelayedTask(this.draw,this);this.updateTask.delay(a)},onDataChange:function(){this.refresh()},onClear:function(){this.refresh()},onUpdate:function(a,c){this.refreshRow(c)},onAdd:function(a,c,b){for(var a=!1,d=[],f=0;f<c.length;f++){var e=c[f];f==c.length-1&&(a=!0);this.xField&&
d.push(e.data[this.xField]);for(var g=0;g<this.chart.series.length;g++){var h=this.chart.series[g],i=this.series[g],j=i.getData(e,b+f);i.type=="pie"&&i.useTotals||h.addPoint(j,a)}}this.xField&&this.chart.xAxis[0].setCategories(d,!0)},onResize:function(){Chart.ux.HighChart.superclass.onResize.call(this);this.update()},onRemove:function(a,c,b){for(a=0;a<this.series.length;a++){var d=this.series[a];d.type=="pie"&&d.useTotals?(d.removeData(c,b),this.chart.series[a].setData(d.getTotals())):this.chart.series[a].data[b].remove(!0)}Ext.each(this.chart.series,
function(a){a.data[b].remove(!0)});this.xField&&this.updatexAxisData()},onLoad:function(){this.refresh()},destroy:function(){delete this.series;this.chart&&(this.chart.destroy(),delete this.chart);this.bindStore(null);this.bindComponent(null);Chart.ux.HighChart.superclass.destroy.call(this)}});Chart.ux.HighChart.Series=function(){var a=[],c=[];return{reg:function(b,d){a.push(d);c.push(b)},get:function(b){return a[c.indexOf(b)]}}}();
Ext.define("Chart.ux.HighChart.Serie",{type:null,xField:null,yField:null,visible:!0,clear:Ext.emptyFn,getData:function(a){var c=this.xField,b={data:a.data,y:a.data[this.yField||this.dataIndex]};if(c)b.x=a.data[c];return b},serieCls:!0,constructor:function(a){a.type=this.type;if(!a.data)a.data=[];Ext.apply(this,a);this.config=a}});Ext.define("Chart.ux.HighChart.SplineSerie",{extend:"Chart.ux.HighChart.Serie",type:"spline"});Chart.ux.HighChart.Series.reg("spline","Chart.ux.HighChart.SplineSerie");
Ext.define("Chart.ux.HighChart.ColumnSerie",{extend:"Chart.ux.HighChart.Serie",type:"column"});Chart.ux.HighChart.Series.reg("column","Chart.ux.HighChart.ColumnSerie");Ext.define("Chart.ux.HighChart.BarSerie",{extend:"Chart.ux.HighChart.Serie",type:"bar"});Chart.ux.HighChart.Series.reg("bar","Chart.ux.HighChart.BarSerie");Ext.define("Chart.ux.HighChart.LineSerie",{extend:"Chart.ux.HighChart.Serie",type:"line"});Chart.ux.HighChart.Series.reg("line","Chart.ux.HighChart.LineSerie");
Ext.define("Chart.ux.HighChart.AreaSerie",{extend:"Chart.ux.HighChart.Serie",type:"area"});Chart.ux.HighChart.Series.reg("area","Chart.ux.HighChart.AreaSerie");Ext.define("Chart.ux.HighChart.AreaSplineSerie",{extend:"Chart.ux.HighChart.Serie",type:"areaspline"});Chart.ux.HighChart.Series.reg("areaspline","Chart.ux.HighChart.AreaSplineSerie");Ext.define("Chart.ux.HighChart.ScatterSerie",{extend:"Chart.ux.HighChart.Serie",type:"scatter"});Chart.ux.HighChart.Series.reg("scatter","Chart.ux.HighChart.ScatterSerie");
Ext.define("Chart.ux.HighChart.PieSerie",{extend:"Chart.ux.HighChart.Serie",type:"pie",categorieField:null,totalDataField:!1,dataField:null,useTotals:!1,columns:[],constructor:function(a){Chart.ux.HighChart.PieSerie.superclass.constructor.apply(this,arguments);if(this.useTotals){this.columnData={};for(var c=this.columns.length,b=0;b<c;b++)this.columnData[this.columns[b]]=100/c}},addData:function(a){for(var c=0;c<this.columns.length;c++){var b=this.columns[c];this.columnData[b]+=a.data[b]}},update:function(a){for(var c=
0;c<this.columns.length;c++){var b=this.columns[c];a.modified[b]&&(this.columnData[b]=this.columnData[b]+a.data[b]-a.modified[b])}},removeData:function(a){for(var c=0;c<this.columns.length;c++){var b=this.columns[c];this.columnData[b]-=a.data[b]}},clear:function(){for(var a=0;a<this.columns.length;a++)this.columnData[this.columns[a]]=0},getData:function(a,c){if(this.totalDataField){for(var b=null,d=0;d<c.length;d++)if(c[d][0]==a.data[this.categorieField]){b=d;c[d][1]+=a.data[this.dataField];break}b===
null&&(c.push([a.data[this.categorieField],a.data[this.dataField]]),d=c.length-1);return c[d]}return this.useTotals?(this.addData(a),[]):[a.data[this.categorieField],a.data[this.dataField]]},getTotals:function(){for(var a=[],c=0;c<this.columns.length;c++){var b=this.columns[c];a.push([b,this.columnData[b]])}return a}});Chart.ux.HighChart.Series.reg("pie",Chart.ux.HighChart.PieSerie);
